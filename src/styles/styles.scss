
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$sapphics-primary: mat-palette($mat-indigo);
$sapphics-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$sapphics-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$sapphics-theme: mat-light-theme((
  color: (
    primary: $sapphics-primary,
    accent: $sapphics-accent,
    warn: $sapphics-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($sapphics-theme);

/* You can add global styles to this file, and also import other style files */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap");
@import "./mixin";
@import "./variables";
@import "./global";
@import "./typography";
@import "~animate.css/animate.min";
@import "./components/dialog";
@import "./animation";


html,
body {
  font-family: "Poppins", sans-serif;
  background-color: $gray;
  margin: 0 auto;
}

button {
  font-family: "Poppins", sans-serif;

}

.container {
  display: grid;
  @include rem("gap", 20);
  @include rem("padding-left", 60);
  @include rem("padding-right", 60);
  @include rem("padding-top", 20);
  @include rem("padding-bottom", 20);
  width: calc(100% - 120px);
  max-width: 1980px;

  @include breakpoint(1125) {
    @include rem("padding-left", 40);
    @include rem("padding-right", 40);
    width: calc(100% - 80px);
  }

  @include breakpoint(810) {
    @include rem("padding-left", 20);
    @include rem("padding-right", 20);
    width: calc(100% - 40px);
  }

  @include breakpoint(425) {
    padding: 0 15px;
    width: calc(100% - 30px);
  }

  &__row {
    display: grid;
  }
}

.filter {
  display: grid;
  @include rem("gap", 5);
  &__header {
    @extend %header-m;
  }

  &__genre {
    display: flex;
    flex-wrap: wrap;
    @include rem("gap", 10);

    &__tag {
      padding: 5px 25px 5px 25px;
      background-color: #e5e5e5;
      cursor: pointer;
      position: relative;

      @extend %tag;

      &__text {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 100%;
        transform: translate(-50%, -50%);
        text-align: center;
        pointer-events: none;

        transition: font-size 0.3s;
      }

      &.--active {
        @extend %inherit-bg;
      }
      transition: all 0.3s;
    }

    &__tag:hover > :last-child {
      font-size: $small;
    }

    &__tag:hover {
      @extend %inherit-bg;
    }
  }
}

.spacing {
  height: $elephant-space;
}

.cat-spacing {
  height: $cat-space;
}

.wolf-spacing {
  height: $wolf-space;
}